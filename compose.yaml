services:

  backend:
    container_name: backend
    build: backend
    env_file:
      - .env
    restart: always
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useSSL=false",
        "spring.datasource.username" : "$MYSQLDB_USER",
        "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQLDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
        }'
    networks:
      - boostrapt-spring
      - spring-mysql
    ports:
      - $SPRING_BACKEND_LOCAL_PORT:$SPRING_BACKEND_DOCKER_PORT
    depends_on:
      mysqldb:
        condition: service_healthy

  mysqldb:
    container_name: mysql_8_0
    image: mysql:8.0
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
      interval: 3s
      retries: 5
      start_period: 30s
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - spring-mysql

  frontend:
    container_name: frontend
    build: frontend
    restart: always
    env_file:
      - .env
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useSSL=false",
        "spring.datasource.username" : "$MYSQLDB_USER",
        "spring.datasource.password" : "$MYSQLDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQLDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
        }'
    networks:
      - boostrapt-spring
    depends_on:
      - backend
    ports:
      - $SPRING_FRONTEND_LOCAL_PORT:$SPRING_FRONTEND_DOCKER_PORT

volumes:
  db-data: {}

networks:
  boostrapt-spring: {}
  spring-mysql: {}
